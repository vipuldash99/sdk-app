import ts from "typescript";
export declare namespace TypeFactory {
    function resolve(checker: ts.TypeChecker, type: ts.Type): ts.Type | null;
    function isFunction(type: ts.Type): boolean;
    function getReturnType(checker: ts.TypeChecker, type: ts.Type, name: string): ts.Type | null;
    function getFullName(checker: ts.TypeChecker, type: ts.Type, symbol?: ts.Symbol): string;
    const keyword: (type: "void" | "any" | "unknown" | "boolean" | "number" | "bigint" | "string") => ts.KeywordTypeNode<ts.SyntaxKind.VoidKeyword | ts.SyntaxKind.AnyKeyword | ts.SyntaxKind.BooleanKeyword | ts.SyntaxKind.NumberKeyword | ts.SyntaxKind.StringKeyword | ts.SyntaxKind.UnknownKeyword | ts.SyntaxKind.BigIntKeyword>;
}
